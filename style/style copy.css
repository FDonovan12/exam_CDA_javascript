@property --_angle {
    syntax: '<angle>';
    initial-value: 0deg;
    inherits: false;
}
:root {
    --spacer: 0.2em; /* affect margin padding .btn*/
    --background-color: hsla(0, 0%, 0%, 0);

    --success-color: hsl(120 100% 25%);
    --success-color-text: hsl(0, 0%, 0%);

    --danger-color: hsl(0 90% 40%);
    --danger-color-text: hsl(0, 0%, 0%);

    --warning-color: hsl(40 90% 40%);
    --warning-color-text: hsl(0, 0%, 0%);

    --light-color: rgb(230 230 230);
    --light-color-text: rgb(37, 37, 37);

    --dark-color: rgb(20 20 20);
    --dark-color-text: rgb(245, 245, 245);

    --primary-color: hsl(200, 84%, 48%);
    --primary-color-text: hsl(0, 0%, 0%);

    --secondary-color: hsl(85, 100%, 55%);
    --secondary-color-text: hsl(0, 0%, 0%);
    --secondary-color-dark-background: hsl(85, 100%, 25%);

    --fs-300: clamp(0.94rem, calc(0.92rem + 0.08vw), 0.98rem);
    --fs-400: clamp(1.13rem, calc(1.06rem + 0.33vw), 1.31rem);
    --fs-500: clamp(1.35rem, calc(1.21rem + 0.69vw), 1.75rem);
    --fs-600: clamp(1.62rem, calc(1.37rem + 1.24vw), 2.33rem);
    --fs-700: clamp(1.94rem, calc(1.54rem + 2.03vw), 3.11rem);
    --fs-800: clamp(2.33rem, calc(1.7rem + 3.15vw), 4.14rem);
    --fs-900: clamp(2.8rem, calc(1.85rem + 4.74vw), 5.52rem);
}
* {
    background-color: transparent;
    border-color: currentColor;
    box-sizing: border-box;
    margin: 0;
    padding: 0;
    font: inherit;
}
img,
picture,
video,
svg {
    display: block;
    max-width: 100%;
    fill: currentColor;
}
p,
li,
figcaption {
    max-width: 65ch;
    text-wrap: pretty;
}
h1,
h2,
h3,
h4,
h5,
h6 {
    text-wrap: balance;
}
html,
body {
    hanging-punctuation: first last;
    min-height: 100svh;
}
:where(body) {
    display: grid;
    grid-template-rows: auto 1fr auto;
    & > :where(*:nth-child(1):not(header)) {
        display: grid;
        grid-template-rows: auto 1fr auto;
    }
}

main {
    height: fit-content;
}
body {
    font-size: var(--fs-400);
    font-family: system-ui, -apple-system, BlinkMacSystemFont, 'Segoe UI',
        Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue',
        sans-serif;
}
h1 {
    font-size: var(--fs-800);
    font-weight: 800;
}
h2 {
    font-size: var(--fs-700);
    font-weight: 700;
}
h3 {
    font-size: var(--fs-600);
    font-weight: 600;
}
h4 {
    font-size: var(--fs-500);
    font-weight: 500;
}
h5 {
    font-size: var(--fs-400);
    font-weight: 400;
}
h6 {
    font-size: var(--fs-300);
    font-weight: 300;
}

@media (prefers-reduced-motion: no-preference) {
    :has(:target) {
        scroll-behavior: smooth;
    }
}
input {
    border: 3px solid;
    margin-block: 0.2em;
    border-radius: 5px;
    padding-inline: 0.2em;
    --_color-input: black;
    border-color: var(--_color-input);
    &:valid {
        --_color-input: var(--success-color);
    }
    &:user-invalid {
        --_color-input: var(--danger-color);
    }
    &:focus:invalid {
        --_color-input: var(--warning-color);
    }
    &:focus {
        box-shadow: 0 0 10px 2px var(--_color-input, black);
    }
    outline: none;
}
.auto-grid {
    display: grid;
    --base-min-col-size: 12ch;
    --base-max-col-size: 24ch;
    --min-col-size: var(--base-min-col-size);
    --max-col-size: var(--base-max-col-size);
    --gap-column: calc(0.2em);
    grid-template-columns: repeat(auto-fit, minmax(var(--min-col-size), 1fr));
    grid-auto-rows: 1fr;
}
.card {
    --_border-size: 0.5em;
    --_border-radius: 0.4em;
    --_scale-card: 1.1;
    --_color: lightgray;
    --_card_colors: var(--primary-color), var(--secondary-color),
        var(--primary-color), var(--secondary-color), var(--primary-color);
    height: 150px;

    border-radius: var(--_border-radius);
    background-color: var(--_color);
    /* padding: calc(var(--spacer)); */
    margin: calc(var(--_border-size) / 2);
    position: relative;
    /* prettier-ignore */
    transition: 
        color 300ms ease-in-out,
        background-color 300ms ease-in-out,
        scale ease-in-out 300ms,
        filter ease-in-out 300ms,
        opacity ease-in-out 300ms;
    border: solid 10px red;
    &:hover {
        animation: rotate 1500ms linear infinite;
    }
    border-image: conic-gradient(from var(--_angle), var(--_card_colors)) 1;
}
.products-grid {
    --base-min-col-size: 20ch;
}

@keyframes rotate {
    from {
        --_angle: 0deg;
    }
    to {
        --_angle: 360deg;
    }
}

@keyframes zIndexHack {
    0%,
    100% {
        z-index: 100;
    }
}
